From a78f4e6ead5ac51b7b4af7a94f85ec0643014651 Mon Sep 17 00:00:00 2001
From: Jorge Cisneros <jorge.cisneros@hpe.com>
Date: Wed, 12 Aug 2020 04:59:46 +0000
Subject: [PATCH] Configurable MACRO in BB recipe

---
 configure.ac         | 21 +++++++++++++++++++--
 host-cmd-manager.cpp |  9 ++++-----
 2 files changed, 23 insertions(+), 7 deletions(-)

diff --git a/configure.ac b/configure.ac
index 29f58e2..636e4b5 100644
--- a/configure.ac
+++ b/configure.ac
@@ -166,11 +166,15 @@ AS_IF([test "x$enable_softoff" != "xno"],
     # Timeouts in SECONDS for SoftPowerOff protocol
     [AC_ARG_VAR(IPMI_SMS_ATN_ACK_TIMEOUT_SECS, \
          [Initial timeout for host to ack and query SMS_ATN from BMC])]
-    [AC_DEFINE_UNQUOTED([IPMI_SMS_ATN_ACK_TIMEOUT_SECS], [30], \
+    AS_IF([test "x$IPMI_SMS_ATN_ACK_TIMEOUT_SECS" == "x"], [IPMI_SMS_ATN_ACK_TIMEOUT_SECS=30])
+    [AC_DEFINE_UNQUOTED([IPMI_SMS_ATN_ACK_TIMEOUT_SECS], [$IPMI_SMS_ATN_ACK_TIMEOUT_SECS], \
                         [Timeout for host to ack and query SMS_ATN from BMC])]
 
     [AC_ARG_VAR(IPMI_HOST_SHUTDOWN_COMPLETE_TIMEOUT_SECS, [Wait time for host to shutdown])]
-    [AC_DEFINE_UNQUOTED([IPMI_HOST_SHUTDOWN_COMPLETE_TIMEOUT_SECS], [45*60], [Wait time for host to shutdown])]
+    AS_IF([test "x$IPMI_HOST_SHUTDOWN_COMPLETE_TIMEOUT_SECS" == "x"],
+          [IPMI_HOST_SHUTDOWN_COMPLETE_TIMEOUT_SECS=45*60])
+    [AC_DEFINE_UNQUOTED([IPMI_HOST_SHUTDOWN_COMPLETE_TIMEOUT_SECS], \
+                        [$IPMI_HOST_SHUTDOWN_COMPLETE_TIMEOUT_SECS], [Wait time for host to shutdown])]
 
     # Indicates an in-band power off or reboot request from the host
     # This file is used to ensure the soft off service does not run for host
@@ -186,6 +190,19 @@ AS_IF([test "x$enable_softoff" != "xno"],
     [AC_DEFINE_UNQUOTED([HOST_INBAND_REQUEST_FILE], ["$HOST_INBAND_REQUEST_FILE"], [File to create if host has initiated shutdown or reboot])]
 )
 
+# Host Command Manager Path
+AC_ARG_VAR(HOST_MANAGER_PATH, [The Host Command Manager path to own])
+AS_IF([test "x$HOST_MANAGER_PATH" == "x"],
+      [HOST_MANAGER_PATH="/org/openbmc/HostIpmi/1"])
+AC_DEFINE_UNQUOTED([HOST_MANAGER_PATH], ["$HOST_MANAGER_PATH"], [The Host Command Manager path to own])
+
+# Host Command Manager Interface
+AC_ARG_VAR(HOST_MANAGER_INTF, [The Host Command Manager interface to own])
+AS_IF([test "x$HOST_MANAGER_INTF" == "x"],
+      [HOST_MANAGER_INTF="org.openbmc.HostIpmi"])
+AC_DEFINE_UNQUOTED([HOST_MANAGER_INTF], ["$HOST_MANAGER_INTF"], [The Host Command Manager interface to own])
+
+
 # Control Host Interfaces
 # Dbus service name
 AC_ARG_VAR(CONTROL_HOST_BUSNAME, [The Control Host Dbus busname to own])
diff --git a/host-cmd-manager.cpp b/host-cmd-manager.cpp
index e52c9bb..0796584 100644
--- a/host-cmd-manager.cpp
+++ b/host-cmd-manager.cpp
@@ -112,9 +112,8 @@ void Manager::checkQueueAndAlertHost()
     {
         log<level::DEBUG>("Asserting SMS Attention");
 
-        std::string HOST_IPMI_SVC("org.openbmc.HostIpmi");
-        std::string IPMI_PATH("/org/openbmc/HostIpmi/1");
-        std::string IPMI_INTERFACE("org.openbmc.HostIpmi");
+
+	auto host = ::ipmi::getService(this->bus, HOST_MANAGER_INTF, HOST_MANAGER_PATH);
 
         // Start the timer for this transaction
         auto time = std::chrono::duration_cast<std::chrono::microseconds>(
@@ -128,8 +127,8 @@ void Manager::checkQueueAndAlertHost()
         }
 
         auto method =
-            this->bus.new_method_call(HOST_IPMI_SVC.c_str(), IPMI_PATH.c_str(),
-                                      IPMI_INTERFACE.c_str(), "setAttention");
+            this->bus.new_method_call(host.c_str(), HOST_MANAGER_PATH,
+                                      HOST_MANAGER_INTF, "setAttention");
         auto reply = this->bus.call(method);
 
         if (reply.is_method_error())
